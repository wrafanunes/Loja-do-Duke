@model Loja_do_Duke.Models.ViewModels.SupplyVM
<body onload="setMaxValueToQuantityInput()">
    <form method="post">
        <input asp-for="Supply.Id" hidden />
        <input asp-for="Supply.Name" hidden />
        <input asp-for="Supply.Price" hidden />
        <input asp-for="Supply.Description" hidden />
        <input asp-for="Supply.CategoryId" hidden />
        <div class="border p-3">
            <div class="form-group row">
                <h2 class="text-info pl-3">Comprar Suprimento</h2>
            </div>
            <div class="row">
                <div class="col-8">
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="Supply.Name"></label>
                        </div>
                        <div class="col-8">
                            <input asp-for="Supply.Name" disabled class="form-control" />
                            <span asp-validation-for="Supply.Name" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-8">
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="Quantity"></label>
                        </div>
                        <div class="col-8">
                            <input asp-for="Quantity" id="quantity" min="0" max="@Model.Supply.AvailableQuantity" class="form-control" onchange="updateValues(this.value)" />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-8">
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="ApplicationUserSupply.UserInventoryQuantity"></label>
                        </div>
                        <div class="col-8">
                            <input asp-for="ApplicationUserSupply.UserInventoryQuantity" hidden />
                            <span>@Model.ApplicationUserSupply.UserInventoryQuantity</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-8">
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="Lei"></label>
                        </div>
                        <div class="col-8">
                            <input asp-for="Lei" hidden />
                            <span id="lei">@Model.Lei</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-8">
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="InventoryCapacity"></label>
                        </div>
                        <div class="col-8">
                            <input asp-for="InventoryCapacity" hidden />
                            <span id="inventoryCapacity">@Model.InventoryCapacity</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-8">
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="Supply.AvailableQuantity"></label>
                        </div>
                        <div class="col-8">
                            <input asp-for="Supply.AvailableQuantity" hidden />
                            <span>@Model.Supply.AvailableQuantity</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-8">
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="TotalValue"></label>
                        </div>
                        <div class="col-8">
                            <span id="totalValue">@Model.TotalValue</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-8">
                    <div class="form-group row">
                        <div class="col-4">
                            <label>Espaço necessário no Inventário</label>
                        </div>
                        <div class="col-8">
                            <span id="inventoryOccupation">0</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-8 offset-4 row">

                    <div class="col">
                        <input type="submit" class="btn btn-info w-100" value="Comprar" />
                    </div>
                    <div class="col">
                        <a asp-action="Index" class="btn btn-success w-100"><i class="fas fa-sign-out-alt"></i> Voltar</a>
                    </div>
                </div>
            </div>
        </div>
    </form>
</body>

@section Scripts{
    <script>
        let quantityInputValue = 0
        const PRICE = @Model.Supply.Price
        const INVENTORYOCCUPATION = @Model.Supply.InventoryOccupation;
        const USERINVENTORYQUANTITY = @Model.ApplicationUserSupply.UserInventoryQuantity;
        const INVENTORYCAPACITY = @Model.InventoryCapacity;
        var multiplesOfThirty = []
        let maxQuantity = document.getElementById("quantity").max
        for (let i = 1; i <= maxQuantity; i++) {
            if ((USERINVENTORYQUANTITY + i) % 30 == 0) multiplesOfThirty.push(i)
        }
        function setMaxValueToQuantityInput() {
            if (document.getElementById("lei").innerHTML / PRICE < @Model.Supply.AvailableQuantity) {
                document.getElementById("quantity").max = document.getElementById("lei").innerHTML / PRICE
            }
            else if (document.getElementById("inventoryCapacity").innerHTML / INVENTORYOCCUPATION < @Model.Supply.AvailableQuantity && @Model.Supply.Id != 5) {
                document.getElementById("quantity").max = document.getElementById("inventoryCapacity").innerHTML / INVENTORYOCCUPATION
            }
            else if (document.getElementById("inventoryCapacity").innerHTML / INVENTORYOCCUPATION < @Model.Supply.AvailableQuantity && @Model.Supply.Id == 5) {
                let counter = 0;
                for (let i = 0; i < INVENTORYCAPACITY; i += INVENTORYOCCUPATION) {
                    counter++
                }
                if (multiplesOfThirty[counter] <= document.getElementById("quantity").max) document.getElementById("quantity").max = multiplesOfThirty[counter]
            }
        }
        //a lógica do pai aqui foi linda :D
        function updateValues(quantity) {
            document.getElementById("lei").innerHTML -= (quantity - quantityInputValue) * PRICE
            document.getElementById("totalValue").innerHTML = quantity * PRICE
            if (@Model.Supply.Id != 5) {
                document.getElementById("inventoryOccupation").innerHTML = quantity * INVENTORYOCCUPATION
                document.getElementById("inventoryCapacity").innerHTML -= (quantity - quantityInputValue) * INVENTORYOCCUPATION
            }
            else {
                for (let i = 0; i < multiplesOfThirty.length; i++) {
                    if (parseInt(quantity) > multiplesOfThirty[i]) {
                        document.getElementById("inventoryOccupation").innerHTML = INVENTORYOCCUPATION * (i + 1)
                        document.getElementById("inventoryCapacity").innerHTML = INVENTORYCAPACITY - INVENTORYOCCUPATION * (i + 1)
                    }
                    else if (quantity <= multiplesOfThirty[0]) {
                        document.getElementById("inventoryOccupation").innerHTML = 0
                        document.getElementById("inventoryCapacity").innerHTML = INVENTORYCAPACITY;
                    }
                }
            }
            quantityInputValue = quantity
        }
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
