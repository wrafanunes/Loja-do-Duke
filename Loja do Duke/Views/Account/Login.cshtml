@model Loja_do_Duke.Models.ViewModels.LoginVM
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> manager
<h1 class="text-info">Entrar</h1>
<div class="row">
    <div class="col-md-8">
        <form asp-controller="Account" asp-action="Login" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" role="form">
            <h4>Use sua conta para entrar.</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Password" class="col-md-2"></label>
                <div class="col-md-10">
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <div class="custom-checkbox">
                        <label asp-for="RememberMe">
                            <input asp-for="RememberMe" />
                            @Html.DisplayNameFor(m => m.RememberMe)
                        </label>

                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="offset-md-2 col-md-2">
                    <button type="submit" class="btn btn-success form-control">Entrar</button>
                </div>
            </div>
            <p><a asp-action="Register">Registar novo usuário?</a></p>
            <p><a asp-action="ForgotPassword">Esqueceu sua senha?</a></p>
        </form>
    </div>
    @{
        var schemes = await manager.GetExternalAuthenticationSchemesAsync();
        var loginProviders = schemes.ToList();

    }
    @if (loginProviders.Count() > 0)
    {
        <div class="md-4">
            <section>
                <h4>Use outro serviço para entrar.</h4>
                <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" role="form">
                    <div>
                        <p>
                            @foreach (var provider in loginProviders)
                            {
                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name"
                                        title="Entrar com @provider.Name">
                                    @provider.Name
                                </button>
                            }
                        </p>
                    </div>
                </form>
            </section>
        </div>
    }
</div>


@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
